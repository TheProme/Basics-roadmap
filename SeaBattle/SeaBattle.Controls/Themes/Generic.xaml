<ResourceDictionary
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SeaBattle.Controls"
    xmlns:helpers="clr-namespace:SeaBattle.Helpers"
    xmlns:vm="clr-namespace:SeaBattle.ViewModels"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors">

    <SolidColorBrush x:Key="NotHitDeck" Color="Green"/>
    <SolidColorBrush x:Key="HitDeck" Color="Orange"/>
    <SolidColorBrush x:Key="DestroyedShip" Color="Red"/>
    <SolidColorBrush x:Key="EmptyCellBackground" Color="Blue"/>
    <SolidColorBrush x:Key="MissedCellBackground" Color="RoyalBlue"/>
    <SolidColorBrush x:Key="FogOfWar" Color="Gray"/>

    <Style x:Key="BlockButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" 
                                          ContentTemplate="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:EmptyFieldCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:EmptyFieldCell}">
                    <Grid x:Name="PART_CellGrid"
                          Background="{TemplateBinding Background}">
                        <Button x:Name="PART_EmptyCellHitButton" 
                                Style="{StaticResource BlockButtonStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHit}" Value="False">
                            <Setter Property="Background" Value="{StaticResource EmptyCellBackground}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHit}" Value="True">
                            <Setter Property="Background" Value="{StaticResource MissedCellBackground}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ShipBlock}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ShipBlock}">
                    <Grid x:Name="PART_ShipBorder"
                          Background="{TemplateBinding Background}">
                        <Button x:Name="PART_HitButton" 
                                Style="{StaticResource BlockButtonStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHit}" Value="False">
                            <Setter Property="Background" Value="{StaticResource NotHitDeck}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHit}" Value="True">
                            <Setter Property="Background" Value="{StaticResource HitDeck}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ShipDestroyed}" Value="True">
                            <Setter Property="Background" Value="{StaticResource DestroyedShip}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Ship}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Ship}">
                    <ItemsControl x:Name="PART_ShipBase" 
                                  ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=local:Ship}, Path=ShipDeck}"
                                  Background="{TemplateBinding Background}"
                                  Width="{TemplateBinding Width}"
                                  Height="{TemplateBinding Height}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <local:ShipBlock Width="{Binding BlockSize}" 
                                                 Height="{Binding BlockSize}"
                                                 Position="{Binding Position}"
                                                 ShipDestroyed="{Binding RelativeSource={RelativeSource AncestorType=local:Ship}, Path=Destroyed}"
                                                 IsHit="{Binding IsHit, Mode=TwoWay}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="{Binding RelativeSource={RelativeSource AncestorType=local:Ship}, Path=Orientation}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--Empty cell template-->
    <DataTemplate x:Key="EmptyCell" DataType="{x:Type vm:EmptyCellViewModel}">
        <local:EmptyFieldCell x:Name="PART_Cell" 
                              Width="{Binding CellSize}"
                              Height="{Binding CellSize}"
                              IsHit="{Binding CellValue.IsHit, Mode=TwoWay}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=FieldIsReady}" Value="False">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=FieldIsReady}" Value="True">
                <Setter Property="IsEnabled" Value="True"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPreview}" Value="True">
                <Setter TargetName="PART_Cell" Property="Background" Value="Purple"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPreview}" Value="True"/>
                    <Condition Binding="{Binding IsOccupied}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PART_Cell" Property="Background" Value="Red"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=IsPlayerField}" Value="False"/>
                    <Condition Binding="{Binding CellValue.IsHit}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PART_Cell" Property="Background" Value="{StaticResource FogOfWar}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!--Ship cell template-->
    <DataTemplate x:Key="ShipCell" DataType="{x:Type vm:ShipBlockViewModel}">
        <local:ShipBlock x:Name="PART_ShipBlock"
                         Width="{Binding CellSize}" 
                         Height="{Binding CellSize}"
                         Position="{Binding CellValue.Position}"
                         ShipDestroyed="{Binding CellValue.ShipBase.Destroyed}"
                         IsHit="{Binding CellValue.IsHit, Mode=TwoWay}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=FieldIsReady}" Value="False">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=FieldIsReady}" Value="True">
                <Setter Property="IsEnabled" Value="True"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPreview}" Value="True">
                <Setter TargetName="PART_ShipBlock" Property="Background" Value="Purple"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPreview}" Value="True"/>
                    <Condition Binding="{Binding IsOccupied}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PART_ShipBlock" Property="Background" Value="Red"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=IsPlayerField}" Value="False"/>
                    <Condition Binding="{Binding CellValue.IsHit}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PART_ShipBlock" Property="Background" Value="{StaticResource FogOfWar}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <helpers:CellTemplateSelector x:Key="CellTemplateSelector" 
                                  EmptyCell="{StaticResource EmptyCell}"
                                  ShipCell="{StaticResource ShipCell}"/>


    <Style TargetType="{x:Type local:Field}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Field}">
                    <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=FieldCells}"
                                  ItemTemplateSelector="{StaticResource CellTemplateSelector}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPlayerField}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=FieldIsReady}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="IsEnabled" Value="False"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=CanClick}" Value="True">
                            <Setter Property="IsEnabled" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=CanClick}" Value="False">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="TurnInfo" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding FieldPreview.FieldVM.IsPlayerField}" Value="True">
                <Setter Property="Text" Value="Player turn"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FieldPreview.FieldVM.IsPlayerField}" Value="False">
                <Setter Property="Text" Value="AI turn"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:GameView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GameView}">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Style="{StaticResource TurnInfo}" 
                                   DataContext="{Binding RelativeSource={RelativeSource AncestorType=local:GameView}, Path=ActivePlayer}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=local:GameView}, Path=Players}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type vm:PlayerViewModel}">
                                    <local:GameSetupControl DataContext="{Binding FieldPreview}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Rows="1"
                                         Columns="2"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SetupButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Margin" Value="5"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding FieldVM.IsPlayerField}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FieldVM.IsReady}" Value="True">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:GameSetupControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GameSetupControl}">
                    <Grid x:Name="setupGrid"
                          Height="380">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth="180"/>
                            <ColumnDefinition Width="300"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0">
                            <Grid x:Name="setupOptionsGrid">
                                <Grid.Style>
                                    <Style TargetType="{x:Type Grid}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding FieldVM.IsPlayerField}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FieldVM.IsReady}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <StackPanel Grid.Row="0"
                        Orientation="Vertical">
                                    <StackPanel>
                                        <TextBlock Text="Ship size" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5"/>
                                        <ComboBox ItemsSource="{Binding ShipSizeValues}" 
                          SelectedItem="{Binding CurrentShipSize}"
                          Width="150"/>
                                    </StackPanel>
                                    <StackPanel MinHeight="190"
                               MinWidth="140"
                               Height="195">
                                        <StackPanel>
                                            <StackPanel Orientation="Horizontal"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Center"
                                        Margin="5">
                                                <TextBlock Text="Left: "/>
                                                <TextBlock Text="{Binding ShipsLeft}"/>
                                            </StackPanel>
                                            <local:Ship Orientation="{Binding PreviewShip.Orientation}" 
                                                    ShipDeck="{Binding PreviewShip.ShipDeck}" 
                                                    ShipSize="{Binding PreviewShip.ShipSize}" 
                                                    HeadPosition="{Binding PreviewShip.HeadPosition}" 
                                                    Destroyed="{Binding PreviewShip.Destroyed}"
                                                    Margin="0 10 0 0"
                                                    IsEnabled="False"
                                                    VerticalAlignment="Center" 
                                                    HorizontalAlignment="Center"/>
                                        </StackPanel>
                                    </StackPanel>
                                    <Button Content="Rotate" 
                                            Command="{Binding RotateShipCommand}"
                                            Style="{StaticResource SetupButton}"/>
                                    <Button Content="Randomize" 
                                            Command="{Binding RandomizePlacementCommand}"
                                            Style="{StaticResource SetupButton}"/>
                                    <ToggleButton IsChecked="{Binding IsRemoving}" 
                                                  Height="35"
                                                  Width="150"
                                                  Margin="5"
                                                  Content="Remove"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <Grid Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="47"/>
                            </Grid.RowDefinitions>
                            <local:Field Grid.Row="0" 
                                     x:Name="gameField"
                                     Margin="0 20 0 0"
                                     Height="300"
                                     IsPlayerField="{Binding FieldVM.IsPlayerField}" 
                                     FieldIsReady="{Binding FieldVM.IsReady}"
                                     Ships="{Binding FieldVM.Ships}" 
                                     FieldCells="{Binding FieldVM.FieldCells}"
                                     CanClick="{Binding CanClick}">
                                     <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseLeftButtonDown" >
                                            <i:InvokeCommandAction Command="{Binding FieldClickCommand}" CommandParameter="{Binding MousePosition}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                      <i:Interaction.Behaviors>
                                        <helpers:MousePositionBehavior Position="{Binding MousePosition, Mode=OneWayToSource}"/>
                                      </i:Interaction.Behaviors>
                            </local:Field>
                            <Button Grid.Row="1"
                                    Command="{Binding SetFieldCommand}"
                                    Content="Ready"
                                    Style="{StaticResource SetupButton}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
