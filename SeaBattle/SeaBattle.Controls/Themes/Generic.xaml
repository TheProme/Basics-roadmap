<ResourceDictionary
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SeaBattle.Controls"
    xmlns:helpers="clr-namespace:SeaBattle.Helpers"
    xmlns:vm="clr-namespace:SeaBattle.ViewModels"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:converters="clr-namespace:SeaBattle.Controls.Converters">

    <SolidColorBrush x:Key="NotHitDeck" Color="Green"/>
    <SolidColorBrush x:Key="HitDeck" Color="Orange"/>
    <SolidColorBrush x:Key="DestroyedShip" Color="Red"/>
    <SolidColorBrush x:Key="EmptyCellBackground" Color="Blue"/>
    <SolidColorBrush x:Key="MissedCellBackground" Color="RoyalBlue"/>
    <SolidColorBrush x:Key="FogOfWar" Color="Gray"/>
    <DrawingImage x:Key="ArrowDown">
        <DrawingImage.Drawing>
            <GeometryDrawing Brush="#0011ff" Geometry="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"/>
        </DrawingImage.Drawing>
    </DrawingImage>

    <converters:InvertableBooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <Style x:Key="SetupButtonText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Verdana"/>
    </Style>

    <Style x:Key="ActionButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="#0011ff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="PART_Border"
                            BorderBrush="#0011ff"
                            BorderThickness="1"
                            CornerRadius="5"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter>
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{TemplateBinding Content}" 
                                               Style="{StaticResource SetupButtonText}"
                                               Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                               TextAlignment="Center"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"/>
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray"/>
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="LightGray"/>
                            <Setter TargetName="PART_Border" Property="Opacity" Value="0.3"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1"
                                                        Storyboard.TargetProperty="Background.Color" To="#0011ff"/>
                                        <ColorAnimation Duration="0:0:0.1"
                                                        Storyboard.TargetProperty="Foreground.Color" To="White"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="Stop">
                                        <ColorAnimation Duration="0:0:0.1"
                                                        Storyboard.TargetProperty="Background.Color" To="White"/>
                                        <ColorAnimation Duration="0:0:0.1"
                                                        Storyboard.TargetProperty="Foreground.Color" To="#0011ff"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SetupButton" BasedOn="{StaticResource ActionButton}" TargetType="{x:Type Button}">
        <Setter Property="Visibility" Value="{Binding FieldVM.IsPlayerField, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Normal}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding FieldVM.IsReady}" Value="True">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="BlockButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" 
                                          ContentTemplate="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleAction" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Red"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="PART_Border"
                            BorderBrush="{TemplateBinding Background}"
                            BorderThickness="1"
                            CornerRadius="5"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter>
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{TemplateBinding Content}" 
                                               Style="{StaticResource SetupButtonText}"
                                               Foreground="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Foreground}"
                                               TextAlignment="Center"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"/>
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                                    To="Green"
                                                    Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                                    To="Red"
                                                    Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#0011ff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="PART_Border"
                            Padding="3"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter>
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                                               Style="{StaticResource SetupButtonText}"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               TextAlignment="Center"/>
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" Value="#0011ff"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="False">
                            <Setter TargetName="PART_Border" Property="Effect">
                                <Setter.Value>
                                    <BlurEffect Radius="3"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" 
                    Grid.ColumnSpan="2" 
                    Background="{TemplateBinding Background}" 
                    BorderBrush="#0011ff" 
                    BorderThickness="2" />
            <Image Source="{StaticResource ArrowDown}" 
                   Grid.Column="1"  
                   Margin="5 5 10 5"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"/>
        </Grid>
    </ControlTemplate>

    <Style x:Key="CustomComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource CustomComboBoxItem}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Name="ToggleButton" 
                                      Background="White"
                                      Template="{StaticResource ComboBoxToggleButton}" 
                                      IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}"
                                      ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Content="{TemplateBinding SelectionBoxItem}"
                                          MinHeight="30"
                                          IsHitTestVisible="False"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center">
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                                               Style="{StaticResource SetupButtonText}"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               TextAlignment="Center"/>
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                        <Popup Placement="Bottom" 
                               IsOpen="{TemplateBinding IsDropDownOpen}" 
                               PopupAnimation="Slide">
                            <Grid SnapsToDevicePixels="True" 
                                  MinWidth="{TemplateBinding ActualWidth}" 
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border Background="White" 
                                        BorderThickness="1" 
                                        BorderBrush="#0011ff"/>
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" 
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:EmptyFieldCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:EmptyFieldCell}">
                    <Grid x:Name="PART_CellGrid"
                          Background="{TemplateBinding Background}">
                        <Button x:Name="PART_EmptyCellHitButton" 
                                Style="{StaticResource BlockButtonStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHit}" Value="False">
                            <Setter Property="Background" Value="{StaticResource EmptyCellBackground}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHit}" Value="True">
                            <Setter Property="Background" Value="{StaticResource MissedCellBackground}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ShipBlock}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ShipBlock}">
                    <Grid x:Name="PART_ShipBorder"
                          Background="{TemplateBinding Background}">
                        <Button x:Name="PART_HitButton" 
                                Style="{StaticResource BlockButtonStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHit}" Value="False">
                            <Setter Property="Background" Value="{StaticResource NotHitDeck}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHit}" Value="True">
                            <Setter Property="Background" Value="{StaticResource HitDeck}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ShipDestroyed}" Value="True">
                            <Setter Property="Background" Value="{StaticResource DestroyedShip}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Ship}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Ship}">
                    <ItemsControl x:Name="PART_ShipBase" 
                                  ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=local:Ship}, Path=ShipDeck}"
                                  Background="{TemplateBinding Background}"
                                  Width="{TemplateBinding Width}"
                                  Height="{TemplateBinding Height}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <local:ShipBlock Width="{Binding BlockSize}" 
                                                 Height="{Binding BlockSize}"
                                                 Position="{Binding Position}"
                                                 ShipDestroyed="{Binding RelativeSource={RelativeSource AncestorType=local:Ship}, Path=Destroyed}"
                                                 IsHit="{Binding IsHit, Mode=TwoWay}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="{Binding RelativeSource={RelativeSource AncestorType=local:Ship}, Path=Orientation}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--Empty cell template-->
    <DataTemplate x:Key="EmptyCell" DataType="{x:Type vm:EmptyCellViewModel}">
        <local:EmptyFieldCell x:Name="PART_Cell" 
                              IsHit="{Binding CellValue.IsHit, Mode=TwoWay}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=FieldIsReady}" Value="False">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=FieldIsReady}" Value="True">
                <Setter Property="IsEnabled" Value="True"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPreview}" Value="True">
                <Setter TargetName="PART_Cell" Property="Background" Value="Purple"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPreview}" Value="True"/>
                    <Condition Binding="{Binding IsOccupied}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PART_Cell" Property="Background" Value="Red"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=IsPlayerField}" Value="False"/>
                    <Condition Binding="{Binding CellValue.IsHit}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PART_Cell" Property="Background" Value="{StaticResource FogOfWar}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!--Ship cell template-->
    <DataTemplate x:Key="ShipCell" DataType="{x:Type vm:ShipBlockViewModel}">
        <local:ShipBlock x:Name="PART_ShipBlock"
                         Position="{Binding CellValue.Position}"
                         ShipDestroyed="{Binding CellValue.ShipBase.Destroyed}"
                         IsHit="{Binding CellValue.IsHit, Mode=TwoWay}"
                         CellSize="{Binding CellSize, Mode=TwoWay}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=FieldIsReady}" Value="False">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=FieldIsReady}" Value="True">
                <Setter Property="IsEnabled" Value="True"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPreview}" Value="True">
                <Setter TargetName="PART_ShipBlock" Property="Background" Value="Purple"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPreview}" Value="True"/>
                    <Condition Binding="{Binding IsOccupied}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PART_ShipBlock" Property="Background" Value="Red"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=ClearFog}" Value="False"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=IsPlayerField}" Value="False"/>
                    <Condition Binding="{Binding CellValue.IsHit}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PART_ShipBlock" Property="Background" Value="{StaticResource FogOfWar}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <helpers:CellTemplateSelector x:Key="CellTemplateSelector" 
                                  EmptyCell="{StaticResource EmptyCell}"
                                  ShipCell="{StaticResource ShipCell}"/>

    <Style TargetType="{x:Type local:Field}">
        <Setter Property="ClearFog" Value="{Binding ClearFog}"/>
        <Setter Property="IsPlayerField" Value="{Binding IsPlayerField}"/>
        <Setter Property="FieldIsReady" Value="{Binding IsReady}"/>
        <Setter Property="Ships" Value="{Binding Ships}"/>
        <Setter Property="FieldCells" Value="{Binding FieldCells}"/>
        <Setter Property="CanClick" Value="{Binding CanClick}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Field}">
                    <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=FieldCells}"
                                  ItemTemplateSelector="{StaticResource CellTemplateSelector}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPlayerField}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=FieldIsReady}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="IsEnabled" Value="False"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=CanClick}" Value="True">
                            <Setter Property="IsEnabled" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=CanClick}" Value="False">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="TurnInfo" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="Foreground" Value="Blue"/>
        <Setter Property="FontFamily" Value="Verdana"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ActivePlayer.FieldPreview.FieldVM.IsPlayerField}" Value="True">
                <Setter Property="Text" Value="Player turn"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ActivePlayer.FieldPreview.FieldVM.IsPlayerField}" Value="False">
                <Setter Property="Text" Value="AI turn"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WinnerInfo" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="Foreground" Value="Blue"/>
        <Setter Property="FontFamily" Value="Verdana"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ActivePlayer.FieldPreview.FieldVM.IsPlayerField}" Value="True">
                <Setter Property="Text" Value="Player won!"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ActivePlayer.FieldPreview.FieldVM.IsPlayerField}" Value="False">
                <Setter Property="Text" Value="AI won!"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type local:GameView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GameView}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="150"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid Visibility="{Binding CurrentlyPlaying, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Normal}">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock Style="{StaticResource TurnInfo}" 
                                           TextAlignment="Center"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"/>
                                <Button Grid.Row="1"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Content="Restart"
                                        Margin="5"
                                        Command="{Binding RestartCommand}"
                                        Style="{StaticResource ActionButton}"/>
                            </Grid>
                            <StackPanel Visibility="{Binding GameIsOver, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Normal}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                <TextBlock Style="{StaticResource WinnerInfo}"
                                           TextAlignment="Center"/>
                                <StackPanel Orientation="Horizontal"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center">
                                    <Button Content="Play again"
                                            Margin="5"
                                            Command="{Binding RestartCommand}"
                                            Style="{StaticResource ActionButton}"/>
                                    <Button Content="Exit"
                                            Command="{Binding ExitCommand}"
                                            Style="{StaticResource ActionButton}"/>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                        <ItemsControl Grid.Row="1" 
                                      ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=local:GameView}, Path=Players}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type vm:PlayerViewModel}">
                                    <local:GameSetupControl DataContext="{Binding FieldPreview}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Rows="1"
                                         Columns="2"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:GameSetupControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GameSetupControl}">
                    <Grid x:Name="setupGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth="180"/>
                            <ColumnDefinition MinWidth="300"/>
                            <ColumnDefinition MaxWidth="180"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0"
                                Visibility="{Binding FieldVM.IsPlayerField, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Normal}">
                            <Grid x:Name="setupOptionsGrid"
                                  Visibility="{Binding FieldVM.IsReady, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverted}">
                                <StackPanel Grid.Row="0"
                                            Orientation="Vertical">
                                    <StackPanel>
                                        <TextBlock Text="Ship size" 
                                                   Style="{StaticResource SetupButtonText}"
                                                   VerticalAlignment="Center" 
                                                   HorizontalAlignment="Center" 
                                                   Margin="5"
                                                   Foreground="#0011ff"/>
                                        <ComboBox ItemsSource="{Binding ShipSizeValues}" 
                                                  SelectedItem="{Binding CurrentShipSize}"
                                                  Style="{StaticResource CustomComboBox}"
                                                  Width="150"/>
                                    </StackPanel>
                                    <StackPanel MinHeight="190"
                                                MinWidth="140"
                                                Height="195">
                                        <StackPanel>
                                            <StackPanel Orientation="Horizontal"
                                                        VerticalAlignment="Top"
                                                        HorizontalAlignment="Center"
                                                        Margin="5">
                                                <TextBlock Text="Left: "
                                                           Style="{StaticResource SetupButtonText}"
                                                           Foreground="#0011ff"/>
                                                <TextBlock Text="{Binding ShipsLeft}"
                                                           Style="{StaticResource SetupButtonText}"
                                                           Foreground="#0011ff"/>
                                            </StackPanel>
                                            <local:Ship Orientation="{Binding PreviewShip.Orientation}" 
                                                    ShipDeck="{Binding PreviewShip.ShipDeck}" 
                                                    ShipSize="{Binding PreviewShip.ShipSize}" 
                                                    HeadPosition="{Binding PreviewShip.HeadPosition}" 
                                                    Destroyed="{Binding PreviewShip.Destroyed}"
                                                    Margin="0 10 0 0"
                                                    IsEnabled="False"
                                                    VerticalAlignment="Center" 
                                                    HorizontalAlignment="Center"/>
                                        </StackPanel>
                                    </StackPanel>
                                    <Button Content="Rotate" 
                                            Command="{Binding RotateShipCommand}"
                                            Style="{StaticResource SetupButton}"/>
                                    <Button Content="Randomize" 
                                            Command="{Binding RandomizePlacementCommand}"
                                            Style="{StaticResource SetupButton}"/>
                                    <ToggleButton IsChecked="{Binding IsRemoving}" 
                                                  Style="{StaticResource ToggleAction}"
                                                  Content="Remove"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <Grid Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition MaxHeight="100"/>
                            </Grid.RowDefinitions>
                            <local:Field DataContext="{Binding FieldVM}"
                                     Grid.Row="0" 
                                     x:Name="gameField"
                                     Margin="10 20 0 20">
                                     <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseLeftButtonDown" >
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=local:GameSetupControl}, Path=DataContext.FieldClickCommand}" 
                                                                   CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=local:GameSetupControl}, Path=DataContext.MousePosition}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                      <i:Interaction.Behaviors>
                                            <helpers:MousePositionBehavior Position="{Binding RelativeSource={RelativeSource AncestorType=local:GameSetupControl}, 
                                                                                                Path=DataContext.MousePosition, Mode=OneWayToSource}"/>
                                      </i:Interaction.Behaviors>
                            </local:Field>
                            <Button Grid.Row="1"
                                    Command="{Binding SetFieldCommand}"
                                    Content="Ready"
                                    Height="80"
                                    Style="{StaticResource SetupButton}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
