<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SeaBattle.Controls"
    xmlns:helpers="clr-namespace:SeaBattle.Helpers"
    xmlns:vm="clr-namespace:SeaBattle.ViewModels">

    <SolidColorBrush x:Key="NotHitDeck" Color="Green"/>
    <SolidColorBrush x:Key="HitDeck" Color="Orange"/>
    <SolidColorBrush x:Key="DestroyedShip" Color="Red"/>
    <SolidColorBrush x:Key="EmptyCellBackground" Color="Blue"/>
    <SolidColorBrush x:Key="MissedCellBackground" Color="RoyalBlue"/>
    <SolidColorBrush x:Key="FogOfWar" Color="Gray"/>

    <Style x:Key="BlockButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" 
                                          ContentTemplate="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:EmptyFieldCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:EmptyFieldCell}">
                    <Grid x:Name="PART_CellGrid"
                          Background="{TemplateBinding Background}">
                        <Button x:Name="PART_EmptyCellHitButton" 
                                Style="{StaticResource BlockButtonStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHit}" Value="False">
                            <Setter Property="Background" Value="{StaticResource EmptyCellBackground}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHit}" Value="True">
                            <Setter Property="Background" Value="{StaticResource MissedCellBackground}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ShipBlock}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ShipBlock}">
                    <Grid x:Name="PART_ShipBorder"
                          Background="{TemplateBinding Background}">
                        <Button x:Name="PART_HitButton" 
                                Style="{StaticResource BlockButtonStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHit}" Value="False">
                            <Setter Property="Background" Value="{StaticResource NotHitDeck}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHit}" Value="True">
                            <Setter Property="Background" Value="{StaticResource HitDeck}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ShipDestroyed}" Value="True">
                            <Setter Property="Background" Value="{StaticResource DestroyedShip}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers> 
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Ship}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Ship}">
                    <ItemsControl x:Name="PART_ShipBase" 
                                  ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=local:Ship}, Path=ShipDeck}"
                                  Background="{TemplateBinding Background}"
                                  Width="{TemplateBinding Width}"
                                  Height="{TemplateBinding Height}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <local:ShipBlock Width="{Binding BlockSize}" 
                                                 Height="{Binding BlockSize}"
                                                 Position="{Binding Position}"
                                                 ShipDestroyed="{Binding RelativeSource={RelativeSource AncestorType=local:Ship}, Path=Destroyed}"
                                                 IsHit="{Binding IsHit, Mode=TwoWay}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="{Binding RelativeSource={RelativeSource AncestorType=local:Ship}, Path=Orientation}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--Empty cell template-->
    <DataTemplate x:Key="EmptyCell" DataType="{x:Type vm:EmptyCellViewModel}">
        <local:EmptyFieldCell x:Name="PART_Cell" 
                              Width="{Binding CellSize}"
                              Height="{Binding CellSize}"
                              IsHit="{Binding CellValue.IsHit, Mode=TwoWay}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsPreview}" Value="True">
                <Setter TargetName="PART_Cell" Property="Background" Value="Purple"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPreview}" Value="True"/>
                    <Condition Binding="{Binding IsOccupied}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PART_Cell" Property="Background" Value="Red"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=IsPlayerField}" Value="False"/>
                    <Condition Binding="{Binding CellValue.IsHit}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PART_Cell" Property="Background" Value="{StaticResource FogOfWar}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!--Ship cell template-->
    <DataTemplate x:Key="ShipCell" DataType="{x:Type vm:ShipBlockViewModel}">
        <local:ShipBlock x:Name="PART_ShipBlock"
                         Width="{Binding CellSize}" 
                         Height="{Binding CellSize}"
                         Position="{Binding CellValue.Position}"
                         ShipDestroyed="{Binding CellValue.ShipBase.Destroyed}"
                         IsHit="{Binding CellValue.IsHit, Mode=TwoWay}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsPreview}" Value="True">
                <Setter TargetName="PART_ShipBlock" Property="Background" Value="Purple"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPreview}" Value="True"/>
                    <Condition Binding="{Binding IsOccupied}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PART_ShipBlock" Property="Background" Value="Red"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=IsPlayerField}" Value="False"/>
                    <Condition Binding="{Binding CellValue.IsHit}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PART_ShipBlock" Property="Background" Value="{StaticResource FogOfWar}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <helpers:CellTemplateSelector x:Key="CellTemplateSelector" 
                                  EmptyCell="{StaticResource EmptyCell}"
                                  ShipCell="{StaticResource ShipCell}"/>

    <Style TargetType="{x:Type local:Field}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Field}">
                    <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=FieldCells}"
                                  ItemTemplateSelector="{StaticResource CellTemplateSelector}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Rows="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=Size}"
                                             Columns="{Binding RelativeSource={RelativeSource AncestorType=local:Field}, Path=Size}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
